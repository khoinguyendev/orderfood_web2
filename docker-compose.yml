version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: order_food
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mynetwork

  springboot-app:
    build: ./backend
    container_name: springboot-app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      # - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/order_food
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      # SPRING_REDIS_HOST: redis
      # SPRING_REDIS_PORT: 6379
      GOOGLE_CALLBACK_URL : http://khoinguyenshop.io.vn
    networks:
      - mynetwork

  # redis:
  #   image: redis:latest
  #   container_name: redis-spring
  #   restart: always
  #   volumes:
  #   - ./redis.conf:/usr/local/etc/redis/redis.conf
  #   command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - mynetwork

  frontend:
    build:
      context: ./frontend 
    container_name: react-frontend
    restart: always
    ports:
      - "4173:4173"
    networks:
      - mynetwork
    depends_on:
      - springboot-app

volumes:
  mysql_data:

networks:
  mynetwork:
    driver: bridge
